diff --git a/properties/nm-openvpn-editor.c b/properties/nm-openvpn-editor.c
index 4c3b7a0..fdcf5ef 100644
--- a/properties/nm-openvpn-editor.c
+++ b/properties/nm-openvpn-editor.c
@@ -1064,7 +1064,7 @@ populate_tls_remote_mode_entry_combo (GtkEditable* entry, GtkComboBox *box,
 
 	gtk_list_store_append (store, &iter);
 	gtk_list_store_set (store, &iter,
-	                    TLS_REMOTE_MODE_COL_NAME, _("Donâ€™t verify certificate identification"),
+	                    TLS_REMOTE_MODE_COL_NAME, _("Don't verify certificate identification"),
 	                    TLS_REMOTE_MODE_COL_VALUE, TLS_REMOTE_MODE_NONE,
 	                    -1);
 
@@ -1970,6 +1970,25 @@ advanced_dialog_new (GHashTable *hash, const char *contype)
 	                  "clicked", G_CALLBACK (gtk_widget_show),
 	                  gtk_builder_get_object (builder, "sk_key_chooser"));
 
+	value = g_hash_table_lookup (hash, NM_OPENVPN_KEY_SCRAMBLE_ENABLE);
+	widget = GTK_WIDGET (gtk_builder_get_object (builder, "scramble_checkbutton"));
+	gboolean scramble_enabled = _hash_get_boolean(hash, NM_OPENVPN_KEY_SCRAMBLE_ENABLE);
+	gtk_check_button_set_active(GTK_CHECK_BUTTON(widget), scramble_enabled);
+	FILE *log_file = fopen("/tmp/nm-openvpn-scramble-debug.log", "a");
+	if (log_file) {
+		fprintf(log_file, "[%s] UI_LOAD: scramble_enabled=%s\n", g_get_current_time_str(), scramble_enabled ? "true" : "false");
+		fclose(log_file);
+	}
+
+	widget = GTK_WIDGET (gtk_builder_get_object (builder, "scramble_type_combo"));
+	value = g_hash_table_lookup (hash, NM_OPENVPN_KEY_SCRAMBLE_TYPE);
+	if (value && *value)
+		gtk_combo_box_set_active_id(GTK_COMBO_BOX(widget), value);
+	else
+		gtk_combo_box_set_active(GTK_COMBO_BOX(widget), 0);
+	log_file = fopen("/tmp/nm-openvpn-scramble-debug.log", "a");
+	if (log_file) {
+		fprintf(log_file, "[%s] UI_LOAD: scramble_type=%s\n", g_get_current_time_str(), value ? value : "NULL");
+		fclose(log_file);
+	}
+
+	widget = GTK_WIDGET (gtk_builder_get_object (builder, "scramble_key_entry"));
+	value = g_hash_table_lookup (hash, NM_OPENVPN_KEY_SCRAMBLE_KEY);
+	if (value && *value)
+		gtk_editable_set_text(GTK_EDITABLE(widget), value);
+	else
+		gtk_editable_set_text(GTK_EDITABLE(widget), "");
+	log_file = fopen("/tmp/nm-openvpn-scramble-debug.log", "a");
+	if (log_file) {
+		fprintf(log_file, "[%s] UI_LOAD: scramble_key=%s\n", g_get_current_time_str(), value ? value : "NULL");
+		fclose(log_file);
+	}
+
 	return dialog;
 }
 
@@ -2417,6 +2436,21 @@ advanced_dialog_new_hash_from_dialog (GtkWidget *dialog)
 	if (gtk_check_button_get_active (GTK_CHECK_BUTTON (widget)))
 		g_hash_table_insert (hash, NM_OPENVPN_KEY_PUSH_PEER_INFO, g_strdup ("yes"));
 
+	widget = GTK_WIDGET (gtk_builder_get_object (builder, "scramble_checkbutton"));
+	if (gtk_check_button_get_active(GTK_CHECK_BUTTON(widget))) {
+		g_hash_table_insert(hash, NM_OPENVPN_KEY_SCRAMBLE_ENABLE, g_strdup("yes"));
+		FILE *log_file = fopen("/tmp/nm-openvpn-scramble-debug.log", "a");
+		if (log_file) {
+			fprintf(log_file, "[%s] UI_SAVE: scramble_enabled=true\n", g_get_current_time_str());
+			fclose(log_file);
+		}
+		widget = GTK_WIDGET (gtk_builder_get_object (builder, "scramble_type_combo"));
+		int scramble_type_idx = gtk_combo_box_get_active(GTK_COMBO_BOX(widget));
+		const char *scramble_type = "obfuscate"; // default
+		if (scramble_type_idx == 0) scramble_type = "obfuscate";
+		// Add more types here as needed
+		g_hash_table_insert(hash, NM_OPENVPN_KEY_SCRAMBLE_TYPE, g_strdup(scramble_type));
+		widget = GTK_WIDGET (gtk_builder_get_object (builder, "scramble_key_entry"));
+		value = gtk_editable_get_text(GTK_EDITABLE(widget));
+		if (value && *value)
+			g_hash_table_insert(hash, NM_OPENVPN_KEY_SCRAMBLE_KEY, g_strdup(value));
+		log_file = fopen("/tmp/nm-openvpn-scramble-debug.log", "a");
+		if (log_file) {
+			fprintf(log_file, "[%s] UI_SAVE: scramble_type=%s, scramble_key=%s\n", g_get_current_time_str(), scramble_type, value ? value : "NULL");
+			fclose(log_file);
+		}
+	}
+
 	return hash;
 }
 
